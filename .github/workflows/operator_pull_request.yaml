name: Operator Pull Request

on:
  workflow_call:
    inputs:
      GOLANG_VERSION:
        description: Go version to use
        default: "~1.18"
        required: false
        type: string

      GOLANG_CI_LINT_VERSION:
        description: golang-ci-lint version to use
        default: "v1.50.1"
        required: false
        type: string
      
      DOCKERFILE_PATH:
        description: Dockerfile path
        required: true
        type: string

      HELM_CHARTS_PATH:
        description: Helm charts path
        required: true
        type: string

      HELM_CHART_TEMPLATE_NAME:
        description: Helm template chart name
        required: true
        type: string

      HELM_CHART_NAMESPACE_NAME:
        description: Helm chart namespace name for templates
        required: true
        type: string

      HELM_VERSION:
        description: Helm version to use
        default: "v3.8.2"
        required: false
        type: string

    secrets:
      SLACK_WEBHOOK_URL:
        description: "Secret to send success/failure message to slack"
        required: true

      CONTAINER_REGISTRY_URL:
        description: "Registry URL to publish image"
        required: true

      CONTAINER_REGISTRY_USERNAME:
        description: "Registry username to login"
        required: true

      CONTAINER_REGISTRY_PASSWORD:
        description: "Registry password to login"
        required: true

jobs:
  make-operator-pull-request:
    name: Operator Pull Request
    runs-on: ubuntu-latest

    steps:
    - name: Check out code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Check if registry secrets are set
      run: |
        if [ "${{ secrets.CONTAINER_REGISTRY_URL }}" == "" ] || [ "${{ secrets.CONTAINER_REGISTRY_USERNAME }}" == "" ] || [ "${{ secrets.CONTAINER_REGISTRY_PASSWORD }}" == "" ]; then
          echo "Required Secrets 'CONTAINER_REGISTRY_URL' or 'CONTAINER_REGISTRY_USERNAME' or 'CONTAINER_REGISTRY_PASSWORD' are not set!"
          exit 1
        fi

    - name: Check if slack secret is set
      run: |
        if [ "${{ secrets.SLACK_WEBHOOK_URL }}" == "" ]; then
          echo "Required Secret 'SLACK_WEBHOOK_URL' is not set!"
          exit 1
        fi

    - name: Set up Go
      id: go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ inputs.GOLANG_VERSION }}

    - name: Lint
      uses: golangci/golangci-lint-action@v3
      with:
        version: ${{ inputs.GOLANG_CI_LINT_VERSION }}
        only-new-issues: false
        args: --timeout 10m

    # Run Tests
    - name: Test
      run: make test

    # Set up helm binary
    - name: Set up Helm
      uses: azure/setup-helm@v3
      with:
        version: ${{ inputs.HELM_VERSION }}

    # Test Helm Templating
    - name: Test Helm Template
      run: |
        helm dependency build ${{ inputs.HELM_CHARTS_PATH }}
        helm template ${{ inputs.HELM_CHART_TEMPLATE_NAME }} ${{ inputs.HELM_CHARTS_PATH }} -n ${{ inputs.HELM_CHART_NAMESPACE_NAME }}

    - name: Generate Tag
      id: generate_tag
      run: |
        sha=${{ github.event.pull_request.head.sha }}
        tag="SNAPSHOT-PR-${{ github.event.pull_request.number }}-${sha:0:8}"
        echo "GIT_TAG=$(echo ${tag})" >> $GITHUB_OUTPUT

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      with:
        driver-opts: |
            image=moby/buildkit:v0.9.3
        buildkitd-flags: --debug
    
    - name: Login to Registry
      uses: docker/login-action@v2
      with:
        registry: ${{ secrets.CONTAINER_REGISTRY_URL }}
        username: ${{ secrets.CONTAINER_REGISTRY_USERNAME }}
        password: ${{ secrets.CONTAINER_REGISTRY_PASSWORD }}

    - name: Generate image repository path
      run: |
        echo IMAGE_REPOSITORY=$(echo ${{ secrets.CONTAINER_REGISTRY_URL }}/${{ github.event.repository.name }} | tr '[:upper:]' '[:lower:]') >> $GITHUB_ENV

    - name: Build and push
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ${{ inputs.DOCKERFILE_PATH  }}
        pull: true
        push: true
        cache-to: type=inline
        tags: |
          ${{ env.IMAGE_REPOSITORY }}:${{ steps.generate_tag.outputs.GIT_TAG }}
        labels: |
          org.opencontainers.image.source=${{ github.event.repository.clone_url }}
          org.opencontainers.image.revision=${{ github.sha }}

    - name: Comment on PR
      uses: mshick/add-pr-comment@v2
      if: always()
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        message-success: '@${{ github.actor }} Image is available for testing. `docker pull ${{ env.IMAGE_REPOSITORY }}:${{ steps.generate_tag.outputs.GIT_TAG }}`'
        message-failure: '@${{ github.actor }} Yikes! You better fix it before anyone else finds out! [Build](https://github.com/${{ github.repository }}/commit/${{ github.event.pull_request.head.sha }}/checks) has Failed!'
        allow-repeats: true

    - name: Notify Slack
      uses: 8398a7/action-slack@v3
      if: always() # Pick up events even if the job fails or is canceled.
      with:
        status: ${{ job.status }}
        fields: repo,author,action,eventName,ref,workflow
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
